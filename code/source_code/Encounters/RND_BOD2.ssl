/*******************************************************************************
        Name:
        Location:
        Description: Object template script

            Created: by sFall Script Editor
            Updated:

*******************************************************************************/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\command.h"


/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure drop_p_proc;
procedure is_dropping_p_proc;
procedure pickup_p_proc;

procedure body1;
procedure body2;
procedure body3;
procedure body4;

/* Defines */

#define LVAR_Only_Once            (0)

/*****************************************************************
   Local Variables which are saved.
   All Local Variables need to be prepended by LVAR_
*****************************************************************/


/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/


/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/


/*******************************************************************
*                           PROCEDURES                             *
*******************************************************************/
variable body;
variable item;

procedure start begin

   if local_var(LVAR_Only_Once) == 0 then begin
      if global_var(GVAR_ENCO_BODY1) == 0 then begin
         set_global_var(GVAR_ENCO_BODY1, 1);
         call body1;
      end
      else if global_var(GVAR_ENCO_BODY2) == 0 then begin
         set_global_var(GVAR_ENCO_BODY2, 1);
         call body2;
      end
      else if global_var(GVAR_ENCO_BODY3) == 0 then begin
         set_global_var(GVAR_ENCO_BODY3, 1);
         call body3;
      end
      else if global_var(GVAR_ENCO_BODY4) == 0 then begin
         set_global_var(GVAR_ENCO_BODY4, 1);
         call body4;
      end

      set_local_var(LVAR_Only_Once, 1);

   end

end

   procedure body1 begin

   end

   procedure body2 begin
   body := create_object(16777777,tile_num_in_direction(dude_tile,random(0,5),random(3,7)) , dude_elevation);
   anim(body, ANIMATE_ROTATION, random(0, 5));

   add_obj_to_inven(body, create_object(PID_PURPLE_ROBE, 0, 0));
   add_obj_to_inven(body, create_object(PID_EMPTY_PILLS_CAN, 0, 0));
   if dude_luck > 7 then begin
      add_obj_to_inven(body, create_object(PID_PLASMA_PISTOL, 0, 0));
      add_obj_to_inven(body, create_object(PID_SMALL_ENERGY_CELL, 0, 0));
      add_obj_to_inven(body, create_object(PID_SUPER_STIMPAK, 0, 0));
   end
   else begin
      add_obj_to_inven(body, create_object(PID_LASER_PISTOL, 0, 0));
      add_obj_to_inven(body, create_object(PID_SMALL_ENERGY_CELL, 0, 0));
   end

   Face_Critter(body, dude_obj);

   kill_critter(body, ANIM_fall_front_blood_sf);

   anim(create_object(PID_LARGE_RADSCORPION, tile_num_in_direction(tile_num(body), 4, 2), dude_elevation), ANIMATE_ROTATION, 1);
   end

   procedure body3 begin

   end

   procedure body4 begin

   end


procedure map_enter_p_proc begin

end

procedure look_at_p_proc begin
   script_overrides;

end

procedure description_p_proc begin
   script_overrides;

end

procedure damage_p_proc begin

end

procedure use_p_proc begin

end

procedure use_obj_on_p_proc begin

end

procedure use_skill_on_p_proc begin

end

procedure drop_p_proc begin

end

procedure is_dropping_p_proc begin

end

procedure pickup_p_proc begin

end
