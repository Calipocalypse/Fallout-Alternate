/*******************************************************************************
        Name:
        Location:
        Description: Object template script

            Created: by sFall Script Editor
            Updated:

*******************************************************************************/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\command.h"


/* Standard Script Procedures */
procedure start;
procedure description_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure drop_p_proc;
procedure is_dropping_p_proc;
procedure pickup_p_proc;

import variable person_barman;
/* Defines */

#define NAME SCRIPT_SSFRIDGE

#define LVAR_TOUCH         (5)

/*****************************************************************
   Local Variables which are saved.
   All Local Variables need to be prepended by LVAR_
*****************************************************************/


/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/


/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/


/*******************************************************************
*                           PROCEDURES                             *
*******************************************************************/

procedure start begin

end

procedure look_at_p_proc begin
   //script_overrides;
end

procedure description_p_proc begin
   //script_overrides;

end

procedure damage_p_proc begin

end

variable angry;
procedure use_p_proc begin

   if obj_can_see_obj(person_barman,dude_obj) then begin
   script_overrides;
      if angry == 0 and obj_can_see_obj(person_barman,dude_obj) and get_critter_stat(person_barman, STAT_current_hp) > 0 then float_msg(person_barman, mstr(200), 2);
      if angry == 1 and obj_can_see_obj(person_barman, dude_obj) and get_critter_stat(person_barman, STAT_current_hp) > 0 then begin
         attack_setup(person_barman, dude_obj);
         float_msg(person_barman, mstr(201), 2);
      end
      angry++;
   end

end

procedure use_obj_on_p_proc begin

end

procedure use_skill_on_p_proc begin

end

procedure drop_p_proc begin

end

procedure is_dropping_p_proc begin

end

procedure pickup_p_proc begin

end
