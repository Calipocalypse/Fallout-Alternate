
#include "..\headers\define.h"

#define NAME                    SCRIPT_SCANADAU
#define TOWN_REP_VAR            (GVAR_TOWN_REP_ARROYO)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"


procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
      procedure assign_home_tile;
      procedure assign_basic_eq;
      procedure day_night_position;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

procedure Node998;
procedure Node999;

procedure FirstTalk;
procedure FirstTalk2;
procedure FirstTalk3;
procedure FirstTalk4;
procedure FirstTalk5A;
procedure FirstTalk5B;
procedure FirstTalk6;
procedure FirstTalk_Traditional1;
procedure FirstTalk_Traditional2;
procedure FirstTalk_Traditional3;
procedure FirstTalk_Traditional_Go;

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_Looked_Before              (7)
#define LVAR_Home_Tile                  (8)
#define LVAR_Night_Tile                 (9)

#define PARAM_MOVE_TO_HOMETILE          (4)


import variable obj_cave_rat_ally1;
import variable obj_cave_rat_ally2;
import variable obj_cave_rat_ally3;

import variable obj_cave_ratmole;
import variable obj_cave_rat_enemy1;
import variable obj_cave_rat_enemy3;
import variable obj_cave_rat_enemy2;
import variable rebel_annadaughter;
import variable rebel_anna;

variable counter;

procedure start begin
end

procedure map_enter_p_proc begin

      if map_first_run then call assign_home_tile;
      if map_first_run then call assign_basic_eq;

      if not is_loading_game then add_timer_event(self_obj,0,0); /* Jest to zapobieganie nakladania sie timed_event_p_proc na timed_event_p_proc, chyba xD */
      //day_night_position /\

      if map_first_run then critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_SHADY_CAMP_CAVE_SIMON);

      rebel_annadaughter:=self_obj;

end

      procedure assign_home_tile begin
            set_local_var(LVAR_Home_Tile,self_tile);
            set_local_var(LVAR_Night_Tile,13101);
      end

      variable item;
      procedure assign_basic_eq begin
            item:=create_object(PID_FROZEN_DINNER,0,0);
            add_obj_to_inven(self_obj,item);
            item:=create_object(PID_MUTATED_FRUIT,0,0);
            add_obj_to_inven(self_obj,item);
      end

      procedure day_night_position begin

            if global_var(GVAR_SHADY_DAY_NIGHT_DISABLED) == 0 and self_elevation == 1 then begin

                  if day then move_to(self_obj,local_var(LVAR_Home_Tile),1); // w innych przypadkach moze byc problem z elewacj?
                  else if game_time_hour==1800 then move_to(self_obj,local_var(LVAR_Night_Tile),1);
                  else move_to(self_obj,local_var(LVAR_Night_Tile),1); // w innych przypadkach moze byc problem z elewacj?
                  add_timer_event(self_obj,15,0);

            end

      end

procedure map_exit_p_proc begin
end

variable only_once;

procedure critter_p_proc begin
   if ((local_var(LVAR_Hostile) == 2) and (obj_can_see_obj(self_obj,dude_obj))) then begin
       set_local_var(LVAR_Hostile,1);
       attack(dude_obj);
   end

   if global_var(GVAR_QUEST_SHADYCAMP_ANNASON) == 3 and tile_distance_objs(self_obj,dude_obj) < 7 and tile_distance_objs(self_obj,obj_cave_rat_ally3) < 7 then animate_run_to_tile(20497);
   /*
   else if tile_distance_objs(self_obj,obj_cave_rat_ally3) > 14 then begin
      reg_anim_begin();
      reg_anim_clear(self_obj);
      Face_Critter(dude_obj,self_obj);
      reg_anim_end();
   end
   */
   //check if all rats are dead
   if global_var(GVAR_QUEST_SHADYCAMP_ANNASON) == 4 and only_once==0 then begin
      if critter_state(obj_cave_ratmole) == CRITTER_IS_DEAD
      and critter_state(obj_cave_rat_ally1) == CRITTER_IS_DEAD
      and critter_state(obj_cave_rat_ally2) == CRITTER_IS_DEAD
      and critter_state(obj_cave_rat_ally3) == CRITTER_IS_DEAD
      and critter_state(obj_cave_rat_enemy1) == CRITTER_IS_DEAD
      and critter_state(obj_cave_rat_enemy2) == CRITTER_IS_DEAD
      and critter_state(obj_cave_rat_enemy3) == CRITTER_IS_DEAD
      and self_cur_hits>0
      then begin
         only_once:=1;
         terminate_combat;
         game_ui_disable;
         counter:=0;
         add_timer_event(self_obj,0,2);
      end
   end

   if global_var(GVAR_QUEST_SHADYCAMP_ANNASON) == 5 then begin
         Follow_Obj_Run_Only(dude_obj,random(1,10),random(2,4))
      if tile_distance(tile_num(self_obj),12917) < 15 then begin
         counter:=0;
         add_timer_event(self_obj,0,3);
      end
   end

/*
   float_msg(obj_cave_ratmole,"Dzialam",random(1,9));
   float_msg(obj_cave_rat_ally1,"Dzialam",random(1,9));
   float_msg(obj_cave_rat_ally2,"Dzialam",random(1,9));
   float_msg(obj_cave_rat_ally3,"Dzialam",random(1,9));
   float_msg(obj_cave_rat_enemy1,"Dzialam",random(1,9));
   float_msg(obj_cave_rat_enemy2,"Dzialam",random(1,9));
   float_msg(obj_cave_rat_enemy3,"Dzialam",random(1,9));
*/

end

procedure damage_p_proc begin

   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Personal_Enemy,1);
       if global_var(GVAR_SHADY_UNDER_REBELLION) == 0 and self_elevation != 2 then set_global_var(GVAR_ALARM_SHADYSANDS,1);

       //rats
       critter_add_trait(rebel_annadaughter,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_SHADY_CAMP_CAVE_SIMON);
       critter_add_trait(obj_cave_rat_ally1,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_SHADY_CAMP_CAVE_SIMON);
       critter_add_trait(obj_cave_rat_ally2,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_SHADY_CAMP_CAVE_SIMON);
       critter_add_trait(obj_cave_rat_ally3,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_SHADY_CAMP_CAVE_SIMON);

       self_attack_dude;
   end

end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Hostile,2);
   end
end

procedure talk_p_proc begin

      if self_elevation == 2 then begin

         if local_var(LVAR_Herebefore) == 0 then start_dialog_at_node(FirstTalk);

      end

      if self_elevation == 1 then begin

         if not day then float_msg(self_obj,"Hrrrrr",FLOAT_MSG_NORMAL);
         else begin

         end

      end


end

procedure destroy_p_proc begin
   inc_good_critter
   set_global_var(GVAR_SHADY_ANNACHILD_DEAD,1);
   set_global_var(GVAR_QUEST_SHADYCAMP_ANNASON,7);
end

procedure look_at_p_proc begin
end

procedure description_p_proc begin
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   set_local_var(LVAR_Hostile,2);
end

procedure Node999 begin
end

variable test;
procedure timed_event_p_proc begin

      if (fixed_param==0) then begin

            //test+=1;
            //display_msg("test"+test);

            /* If global_var(GVAR_SHADY_QUEST_KID_RESCUED) == 1 THEN */ call day_night_position;

      end

      if (fixed_param==1) then begin

         if counter == 0 then begin
            game_ui_disable;
            fadeout(1000);
            move_to(dude_obj,12717,2);
            add_timer_event(self_obj,game_ticks(4),1);
         end

         else if counter == 1 then begin
            fadein(1000);
            add_timer_event(self_obj,game_ticks(5),1);
            floater(200);
         end

         else if counter == 2 then begin
            animate_move_obj_to_tile(dude_obj,tile_num_in_direction(self_tile,4,3),ANIMATE_WALK);
            add_timer_event(self_obj,game_ticks(5),1);
         end

         else if counter == 3 then begin
            game_ui_enable;
            start_dialog_at_node(FirstTalk);
         end

         counter++;

      end

      if (fixed_param==2) then begin

         if counter == 0 then begin
         Face_Critter(dude_obj,self_obj);
         Face_Critter(self_obj,dude_obj);
         float_msg(self_obj,mstr(310),2);
         add_timer_event(self_obj,game_ticks(3),2);
         end

         else if counter == 1 then begin
         float_msg(dude_obj,mstr(311),FLOAT_MSG_BLUE);
         add_timer_event(self_obj,game_ticks(5),2);
         end

         else if counter == 2 then begin
         float_msg(self_obj,mstr(312),FLOAT_MSG_NORMAL);
         add_timer_event(self_obj,game_ticks(3),2);
         end

         else if counter == 3 then begin
         float_msg(self_obj,mstr(313),FLOAT_MSG_BLUE);
         add_timer_event(self_obj,game_ticks(3),2);
         end

         else if counter == 4 then begin
         set_global_var(GVAR_QUEST_SHADYCAMP_ANNASON,5); //follows
         add_timer_event(self_obj,game_ticks(3),2);
         end

         else if counter == 5 then begin
         game_ui_enable;
         end

         counter++;

      end

      if (fixed_param==3) then begin

         if counter == 0 then begin
            game_ui_disable;
            fadeout(1000);
            move_to(self_obj,13508,1);
            animate_rotation(2);
            anim(rebel_anna,ANIMATE_ROTATION,2);
            add_timer_event(self_obj,game_ticks(1),3);
         end

         else if counter == 1 then begin
            fadein(1000);
            set_global_var(GVAR_QUEST_SHADYCAMP_ANNASON,6);
            game_ui_enable;
         end

         counter++;

      end

      if (fixed_param==PARAM_MOVE_TO_HOMETILE) then begin
         move_to(self_obj, local_var(LVAR_Home_Tile),2);
         animate_rotation(4);
      end

end

procedure FirstTalk begin
   Reply(mstr(200));
   if global_var(GVAR_QUEST_SHADYCAMP_ANNASON) > 0 then NOption(201,FirstTalk2,001);
   else NOption(203,FirstTalk2,001);
   set_local_var(LVAR_Herebefore,1);
end

procedure FirstTalk2 begin
   Reply(mstr(210));
   NOption(211,FirstTalk3,001);
end

procedure FirstTalk3 begin
   Reply(mstr(220));
   NOption(221,FirstTalk4,001);
end

procedure FirstTalk4 begin
   Reply(mstr(230));
   NOption(231,FirstTalk5A,001);
   NOption(232,FirstTalk5B,001);
end

procedure FirstTalk5A begin
   Reply(mstr(240));
   NOption(241,FirstTalk6,001);
end

procedure FirstTalk5B begin
   Reply(mstr(250));
   NOption(251,FirstTalk6,001);
end

procedure FirstTalk6 begin
   Reply(mstr(260));
   NOption(261,Node999,001); //UNFINISHED SPEECH WAY
   NOption(262,FirstTalk_Traditional1,001);
end

/* Speech */

/* Traditional Way */

procedure FirstTalk_Traditional1 begin
   Reply(mstr(270));
   NOption(271,FirstTalk_Traditional2,001);
   NOption(272,FirstTalk_Traditional2,001);
end

procedure FirstTalk_Traditional2 begin
   Reply(mstr(280));
   NOption(281,FirstTalk_Traditional3,001);
   NOption(282,FirstTalk_Traditional_Go,001);
end

procedure FirstTalk_Traditional3 begin
   Reply(mstr(290));
   NOption(291,FirstTalk_Traditional_Go,001);
end

procedure FirstTalk_Traditional_Go begin
   set_global_var(GVAR_QUEST_SHADYCAMP_ANNASON,3);
end