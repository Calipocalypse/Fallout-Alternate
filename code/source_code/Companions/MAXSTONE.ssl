#include "..\headers\define.h"


#define NAME                    SCRIPT_MAXSTONE


#include "..\headers\command.h"
#include "..\headers\PARTY.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure map_enter_p_proc;


/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending




// The next lines are added in by the Designer Tool.
// Do NOT add in any lines here.
//~~~~~~~~~~~~~~~~ DESIGNER TOOL STARTS HERE

procedure Node002;
procedure Node003;
procedure PreCompanion_HereAgain;
// party member default nodes
procedure PartyOptions; //Main party member node
procedure PartyOption_HealYourself; // heal yourself //1
procedure PartyOption_Wait; // wait here //2
procedure PartyOption_PutDownTheWeapon; // put your weapon away //3
procedure PartyOption_FollowClose; // follow close //4
procedure PartyOption_FollowMedium; // follow medium //5
procedure PartyOption_FollowFar; // follow far //6
procedure PartyOption_FollowOptions; // Distance //7
procedure PartyOption_GearMenu; // Gear .. but he doesn't have any //8
procedure PartyOption_RemoveArmor; // Remove armor //9
procedure PartyOption_Tell_Good_Weapons; // Weapons that Can be used... NA //10
procedure PartyOption_StopWaiting; // rejoin party /1100

procedure timed_event_p_proc;

procedure giveweapon;

/* Dialogue */
/* First Time      */ procedure FirstTime0; procedure FirstTime; procedure FirstTime2; procedure FirstTime3; procedure FirstTime4; procedure FirstTime5; procedure FirstTime6;
/* First Time Garl */ procedure FirstTimeGarl1;

//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool


/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_WAITING                      (0)
#define LVAR_FOLLOW_DISTANCE              (1)
#define LVAR_TEAM                         (2)
#define LVAR_Herebefore                   (3)


#define PARTY_NODE_X                      PartyOptions


#define original_team                     TEAM_KHANS

#define PARAM_ADD_TEAM                    (1)
#define PARAM_GARL_ADDED                  (2)

/* Local variables which do not need to be saved between map changes. */
variable Only_Once:=0;


procedure start begin
end


procedure map_enter_p_proc begin
   party_member_map_enter;
   Only_Once:=0;
   if party_member_obj(obj_pid(self_obj)) then begin
      critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_PLAYER);
   end else begin
      critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,original_team);
   end

   if obj_maxstone != self_obj then set_global_var(GVAR_POINTER_MAXSTONE, self_obj);

end


procedure critter_p_proc begin
   if party_member_obj(obj_pid(self_obj)) and (party_is_waiting == false) then begin
      party_member_follow_dude
   end

   if local_var(LVAR_Herebefore) == 0 and global_var(GVAR_SHADY_REBELLION) < 1 then begin
      if tile_distance_objs(dude_obj, self_obj) < 5 then call FirstTime0;
   end

   //float_msg(dude_obj, "" + global_var(GVAR_SHADY_REBELLION), 2);

   //float_msg(self_obj, "s " + party_member_obj(PID_MAXSTONE)+" "+self_pid,2);

   //display_msg("moj pid: "+obj_pid(self_obj));
   //display_msg("moj ptr: "+self_obj);
end


procedure talk_p_proc begin
    if local_var(LVAR_Herebefore) == 1 then begin
       if not party_member_obj(obj_pid(self_obj)) then begin
         if not local_var(LVAR_Herebefore) == 0 then start_dialog_at_node(PreCompanion_HereAgain);
       end
       else call PartyOptions;
    end
    else if local_var(LVAR_Herebefore) == 2 then start_dialog_at_node(FirstTimeGarl1);
    else if local_var(LVAR_Herebefore) == 0 then start_dialog_at_node(FirstTime0);
end


procedure Node998 begin
end


procedure Node999 begin
end

procedure Node002 begin
   if (dude_at_max_party_size) then begin
      Reply(mstr(10015));
      NOption(g_mstr(10007),Node999,001);
   end else begin
      party_add_self;
      Call PartyOptions;
   end
end

procedure PreCompanion_HereAgain begin
   Reply(mstr(10000));
   NOption(mstr(10001),Node002,001);
   NOption(mstr(10002),Node999,001);
end


#define DEF_PM_OPTIONS  \
   party_member_options(def_heal_msg, def_follow_msg, 0, def_wait_msg, def_nowait_msg, def_end_msg, def_stupid_msg)
#define DEF_PM_FOLLOW \
   party_follow_options(def_close_msg, def_med_msg, def_far_msg, g_mstr(10014))


procedure PartyOptions begin
   Reply(mstr(10000));
   DEF_PM_OPTIONS;
end


procedure PartyOption_HealYourself begin // heal yourself
   obj_heal(self_obj)
   global_temp := 0;
   if (party_healed_max) then begin
      Reply(mstr(10010));
   end else if (party_healed_good) then begin
      Reply(mstr(10011));
   end else if (party_healed_hurt) then begin
      Reply(mstr(10012));
   end else begin
      Reply(mstr(10013));
   end
   DEF_PM_OPTIONS;
end


procedure PartyOption_Wait begin // wait here
   set_party_waiting;
   Reply(mstr(10005));
   DEF_PM_OPTIONS;
end


procedure PartyOption_PutDownTheWeapon begin // put your weapon away
   inven_unwield(self_obj);
   call PartyOption_FollowOptions;
end


procedure PartyOption_FollowClose begin // follow close
   set_follow_close;
   call PartyOption_FollowOptions;
end


procedure PartyOption_FollowMedium begin// follow medium
   set_follow_medium;
   call PartyOption_FollowOptions;
end


procedure PartyOption_FollowFar begin // follow far
   set_follow_far;
   call PartyOption_FollowOptions;
end


procedure PartyOption_FollowOptions begin
   if (local_var(LVAR_FOLLOW_DISTANCE) == FOLLOW_DISTANCE_CLOSE) then begin
   Reply(mstr(10005));
   end else if (local_var(LVAR_FOLLOW_DISTANCE) == FOLLOW_DISTANCE_MEDIUM) then begin
   Reply(mstr(10005));
   end else if (local_var(LVAR_FOLLOW_DISTANCE) == FOLLOW_DISTANCE_FAR) then begin
   Reply(mstr(10005));
   end
   DEF_PM_FOLLOW;
end


procedure PartyOption_GearMenu begin

end


procedure PartyOption_RemoveArmor begin
remove_armor(self_obj)
end


procedure PartyOption_Tell_Good_Weapons begin
end




procedure PartyOption_StopWaiting begin // rejoin party
   if (dude_at_max_party_size) then begin
      Reply(mstr(10015));
      NOption(g_mstr(10007),Node999,001);
   end else begin
      end_party_waiting;
      Reply(mstr(10005));
      DEF_PM_OPTIONS;
   end
end

procedure timed_event_p_proc begin

   if fixed_param == PARAM_ADD_TEAM then begin
      party_add_self;
   end

   else if fixed_param == PARAM_GARL_ADDED then begin
      set_local_var(LVAR_Herebefore, 2);
   end

end

/* Dialogue Part */
procedure FirstTime0 begin
   set_local_var(LVAR_Herebefore, 1);
   Face_Critter(dude_obj, self_obj);
   Face_Critter(self_obj, dude_obj);
   start_dialog_at_node(FirstTime);
end

procedure FirstTime begin
   Reply(mstr(100));
   NOption(101, FirstTime2, 001);
end

procedure FirstTime2 begin
   Reply(mstr(105));
   NOption(106, FirstTime3, 001);
end

procedure FirstTime3 begin
   Reply(mstr(110));
   NOption(111, FirstTime4, 001);
end

procedure FirstTime4 begin
   Reply(mstr(115));
   NOption(116, FirstTime5, 001);
end

procedure FirstTime5 begin
   Reply(mstr(120));
   NOption(121, FirstTime6, 001);
   NOption(122, PartyOption_StopWaiting, 001);
   display_mstr(150);
   give_xp(100);
end

procedure FirstTime6 begin
   Reply(mstr(125));
   NOption(126, Node999, 001);
end

procedure FirstTimeGarl1 begin
   Reply(mstr(130));
   NOption(131, FirstTime5, 001);
end